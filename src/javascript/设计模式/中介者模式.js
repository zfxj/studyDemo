/**
 * 中介者模式
 * 通过定义一个中介者对象，其他所有相关对象都通过该中介者对象来通信，而不是互相引用，当其中当一个对象发生
 * 改变时，只需要通知中介对象即可，通过中介者模式，可以解除对象与对象之间的紧耦合关系
 */

/** 比如：航线上的飞机只需要和塔台通信就能确定航线，和飞行状态，而不需要和所有的飞机进行通信。而塔台作为
         中介者是知道每个飞机的信息的
*/

/**
 * 适用场景：购物车需求，存在商品选择表单，颜色选择表单，购买数量表单等，都会触发change事件，那么可以
 * 通过中介者来转发处理这些事件，实现各个事件间等解藕，仅仅维护中介者对象即可。
 * redux,vuex都属于中介者模式的实际应用，我们把共享的数据，抽离成一个单独的store,每个都通过store这个中介者
 * 来操作对象，目的就是减少耦合
 */